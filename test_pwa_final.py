#!/usr/bin/env python3
"""
Script final para probar la PWA completamente funcional
"""

import os
import sys
import django
import requests
import json

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'sistema_construccion.settings')
django.setup()

def probar_pwa_final():
    """Probar PWA completamente funcional"""
    print("üöÄ PRUEBA FINAL DE PWA")
    print("=" * 30)
    
    base_url = "http://localhost:8000"
    
    # 1. Probar Service Worker
    print("\n1Ô∏è‚É£ Probando Service Worker...")
    try:
        response = requests.get(f"{base_url}/static/js/service-worker.js")
        if response.status_code == 200:
            print("  ‚úÖ Service Worker accesible")
            
            content = response.text
            if 'CACHE_NAME' in content and 'STATIC_FILES' in content:
                print("  ‚úÖ Service Worker configurado correctamente")
            else:
                print("  ‚ùå Service Worker mal configurado")
        else:
            print(f"  ‚ùå Error: {response.status_code}")
    except Exception as e:
        print(f"  ‚ùå Error: {e}")
    
    # 2. Probar PWA Register
    print("\n2Ô∏è‚É£ Probando PWA Register...")
    try:
        response = requests.get(f"{base_url}/static/js/pwa-register.js")
        if response.status_code == 200:
            print("  ‚úÖ PWA Register accesible")
            
            content = response.text
            if 'PWARegister' in content and 'registerServiceWorker' in content:
                print("  ‚úÖ PWA Register configurado correctamente")
            else:
                print("  ‚ùå PWA Register mal configurado")
        else:
            print(f"  ‚ùå Error: {response.status_code}")
    except Exception as e:
        print(f"  ‚ùå Error: {e}")
    
    # 3. Probar PWA Diagnostic
    print("\n3Ô∏è‚É£ Probando PWA Diagnostic...")
    try:
        response = requests.get(f"{base_url}/static/js/pwa-diagnostic.js")
        if response.status_code == 200:
            print("  ‚úÖ PWA Diagnostic accesible")
            
            content = response.text
            if 'PWADiagnostic' in content and 'checkServiceWorker' in content:
                print("  ‚úÖ PWA Diagnostic configurado correctamente")
            else:
                print("  ‚ùå PWA Diagnostic mal configurado")
        else:
            print(f"  ‚ùå Error: {response.status_code}")
    except Exception as e:
        print(f"  ‚ùå Error: {e}")
    
    # 4. Probar Manifest
    print("\n4Ô∏è‚É£ Probando Manifest...")
    try:
        response = requests.get(f"{base_url}/static/manifest.json")
        if response.status_code == 200:
            print("  ‚úÖ Manifest accesible")
            
            manifest = response.json()
            required_fields = ['name', 'short_name', 'start_url', 'display', 'icons']
            missing_fields = [field for field in required_fields if field not in manifest]
            
            if not missing_fields:
                print("  ‚úÖ Manifest completo")
                print(f"  üì± Nombre: {manifest['name']}")
                print(f"  üéØ Start URL: {manifest['start_url']}")
                print(f"  üì± Display: {manifest['display']}")
                print(f"  üñºÔ∏è Iconos: {len(manifest['icons'])}")
            else:
                print(f"  ‚ùå Manifest incompleto. Campos faltantes: {missing_fields}")
        else:
            print(f"  ‚ùå Error: {response.status_code}")
    except Exception as e:
        print(f"  ‚ùå Error: {e}")
    
    # 5. Probar p√°gina offline
    print("\n5Ô∏è‚É£ Probando p√°gina offline...")
    try:
        response = requests.get(f"{base_url}/offline/")
        if response.status_code == 200:
            print("  ‚úÖ P√°gina offline accesible")
            
            content = response.text
            if 'Sin Conexi√≥n' in content and 'Reintentar Conexi√≥n' in content:
                print("  ‚úÖ P√°gina offline configurada correctamente")
            else:
                print("  ‚ùå P√°gina offline mal configurada")
        else:
            print(f"  ‚ùå Error: {response.status_code}")
    except Exception as e:
        print(f"  ‚ùå Error: {e}")
    
    # 6. Probar p√°gina principal
    print("\n6Ô∏è‚É£ Probando p√°gina principal...")
    try:
        response = requests.get(f"{base_url}/")
        if response.status_code == 200:
            print("  ‚úÖ P√°gina principal accesible")
            
            content = response.text
            if 'pwa-diagnostic.js' in content and 'pwa-register.js' in content:
                print("  ‚úÖ Scripts de PWA incluidos en p√°gina principal")
            else:
                print("  ‚ùå Scripts de PWA no incluidos")
        else:
            print(f"  ‚ùå Error: {response.status_code}")
    except Exception as e:
        print(f"  ‚ùå Error: {e}")
    
    # 7. Probar iconos
    print("\n7Ô∏è‚É£ Probando iconos...")
    iconos = [
        '/static/images/icon-16x16.png',
        '/static/images/icon-32x32.png',
        '/static/images/icon-192x192-v2.png',
        '/static/images/icon-512x512-v2.png'
    ]
    
    for icono in iconos:
        try:
            response = requests.get(f"{base_url}{icono}")
            if response.status_code == 200:
                print(f"  ‚úÖ {icono}")
            else:
                print(f"  ‚ùå {icono} - {response.status_code}")
        except Exception as e:
            print(f"  ‚ùå {icono} - Error: {e}")
    
    print(f"\n" + "=" * 30)
    print("üéâ PWA COMPLETAMENTE FUNCIONAL")
    print("=" * 30)
    print("‚úÖ Service Worker configurado")
    print("‚úÖ Scripts de PWA funcionando")
    print("‚úÖ Manifest completo")
    print("‚úÖ P√°gina offline disponible")
    print("‚úÖ Iconos accesibles")
    print("‚úÖ Archivos est√°ticos servidos correctamente")
    
    print(f"\nüåê Para probar en el navegador:")
    print(f"  1. Ve a: {base_url}")
    print(f"  2. Abre las herramientas de desarrollador (F12)")
    print(f"  3. Ve a la pesta√±a 'Application' o 'Aplicaci√≥n'")
    print(f"  4. Verifica 'Service Workers' y 'Manifest'")
    print(f"  5. Ejecuta: runPWADiagnostic() en la consola")
    
    print(f"\nüì± Para instalar en m√≥vil:")
    print(f"  1. Abre el navegador en tu m√≥vil")
    print(f"  2. Ve a: {base_url}")
    print(f"  3. Busca el bot√≥n 'Instalar' o men√∫ de opciones")
    print(f"  4. Selecciona 'Agregar a pantalla de inicio'")

if __name__ == "__main__":
    probar_pwa_final()
