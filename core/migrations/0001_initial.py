# Generated by Django 5.2.5 on 2025-08-20 04:53

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaGasto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Categoría de Gasto',
                'verbose_name_plural': 'Categorías de Gastos',
            },
        ),
        migrations.CreateModel(
            name='CategoriaInventario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Categoría de Inventario',
                'verbose_name_plural': 'Categorías de Inventario',
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('razon_social', models.CharField(max_length=200)),
                ('codigo_fiscal', models.CharField(blank=True, max_length=50)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('telefono', models.CharField(blank=True, max_length=20)),
                ('direccion', models.TextField(blank=True)),
                ('activo', models.BooleanField(default=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
            },
        ),
        migrations.CreateModel(
            name='Colaborador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('dpi', models.CharField(blank=True, max_length=20)),
                ('direccion', models.TextField(blank=True)),
                ('telefono', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('salario', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('fecha_contratacion', models.DateField(blank=True, null=True)),
                ('fecha_vencimiento_contrato', models.DateField(blank=True, null=True)),
                ('activo', models.BooleanField(default=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Colaborador',
                'verbose_name_plural': 'Colaboradores',
            },
        ),
        migrations.CreateModel(
            name='GastoFijoMensual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('concepto', models.CharField(max_length=200)),
                ('monto', models.DecimalField(decimal_places=2, max_digits=10)),
                ('activo', models.BooleanField(default=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Gasto Fijo Mensual',
                'verbose_name_plural': 'Gastos Fijos Mensuales',
            },
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True)),
                ('descripcion', models.TextField(blank=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Rol',
                'verbose_name_plural': 'Roles',
            },
        ),
        migrations.CreateModel(
            name='Anticipo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_anticipo', models.CharField(help_text='Número único del anticipo', max_length=20, unique=True)),
                ('monto', models.DecimalField(decimal_places=2, help_text='Monto del anticipo en GTQ', max_digits=12)),
                ('monto_aplicado', models.DecimalField(decimal_places=2, default=0, help_text='Monto ya aplicado a facturas', max_digits=12)),
                ('monto_disponible', models.DecimalField(decimal_places=2, help_text='Monto disponible para aplicar', max_digits=12)),
                ('tipo', models.CharField(choices=[('anticipo', 'Anticipo de Obra'), ('materiales', 'Anticipo de Materiales'), ('gastos', 'Anticipo de Gastos'), ('otros', 'Otros Anticipos')], default='anticipo', max_length=20)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente de Aplicar'), ('aplicado', 'Aplicado a Facturas'), ('devuelto', 'Devuelto al Cliente'), ('cancelado', 'Cancelado')], default='pendiente', max_length=20)),
                ('fecha_recepcion', models.DateField(default=django.utils.timezone.now, help_text='Fecha en que se recibió el anticipo')),
                ('fecha_vencimiento', models.DateField(blank=True, help_text='Fecha de vencimiento del anticipo', null=True)),
                ('fecha_aplicacion', models.DateField(blank=True, help_text='Fecha en que se aplicó completamente', null=True)),
                ('metodo_pago', models.CharField(choices=[('efectivo', 'Efectivo'), ('transferencia', 'Transferencia Bancaria'), ('cheque', 'Cheque'), ('tarjeta', 'Tarjeta de Crédito/Débito'), ('otros', 'Otros')], default='transferencia', max_length=50)),
                ('referencia_pago', models.CharField(blank=True, help_text='Número de referencia, cheque, etc.', max_length=100)),
                ('banco_origen', models.CharField(blank=True, help_text='Banco de origen del pago', max_length=100)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción detallada del anticipo')),
                ('observaciones', models.TextField(blank=True, help_text='Observaciones adicionales')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('creado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='anticipos_creados', to=settings.AUTH_USER_MODEL)),
                ('modificado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='anticipos_modificados', to=settings.AUTH_USER_MODEL)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anticipos', to='core.cliente')),
            ],
            options={
                'verbose_name': 'Anticipo',
                'verbose_name_plural': 'Anticipos',
                'ordering': ['-fecha_recepcion', '-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='ArchivoAdjunto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('cliente', 'Cliente'), ('proyecto', 'Proyecto'), ('factura', 'Factura'), ('gasto', 'Gasto'), ('pago', 'Pago')], max_length=20)),
                ('registro_id', models.IntegerField()),
                ('nombre_archivo', models.CharField(max_length=255)),
                ('archivo', models.FileField(upload_to='archivos_adjuntos/')),
                ('tipo_mime', models.CharField(blank=True, max_length=100)),
                ('tamano', models.IntegerField(blank=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Archivo Adjunto',
                'verbose_name_plural': 'Archivos Adjuntos',
            },
        ),
        migrations.CreateModel(
            name='ConfiguracionNotificaciones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notificaciones_habilitadas', models.BooleanField(default=True, help_text='Activar/desactivar todas las notificaciones')),
                ('facturas_vencidas', models.BooleanField(default=True, help_text='Notificaciones de facturas vencidas')),
                ('pagos_pendientes', models.BooleanField(default=True, help_text='Notificaciones de pagos pendientes')),
                ('gastos_pendientes', models.BooleanField(default=True, help_text='Notificaciones de gastos pendientes')),
                ('archivos_subidos', models.BooleanField(default=True, help_text='Notificaciones de archivos subidos')),
                ('presupuestos_revision', models.BooleanField(default=True, help_text='Notificaciones de presupuestos en revisión')),
                ('email_habilitado', models.BooleanField(default=True, help_text='Recibir notificaciones por email')),
                ('resumen_diario', models.BooleanField(default=False, help_text='Recibir resumen diario por email')),
                ('frecuencia_email', models.CharField(choices=[('inmediato', 'Inmediato'), ('cada_hora', 'Cada hora'), ('diario', 'Diario'), ('semanal', 'Semanal')], default='inmediato', help_text='Frecuencia de envío de emails', max_length=20)),
                ('horario_inicio', models.TimeField(blank=True, help_text='Hora de inicio para recibir notificaciones', null=True)),
                ('horario_fin', models.TimeField(blank=True, help_text='Hora de fin para recibir notificaciones', null=True)),
                ('mostrar_popup', models.BooleanField(default=True, help_text='Mostrar popup de notificaciones')),
                ('sonido_notificacion', models.BooleanField(default=True, help_text='Reproducir sonido de notificación')),
                ('fecha_creacion', models.DateTimeField(default=django.utils.timezone.now)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='configuracion_notificaciones', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Configuración de Notificaciones',
                'verbose_name_plural': 'Configuraciones de Notificaciones',
            },
        ),
        migrations.CreateModel(
            name='Factura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_factura', models.CharField(help_text='Número único de la factura', max_length=20, unique=True)),
                ('tipo', models.CharField(choices=[('progreso', 'Factura por Progreso de Obra'), ('final', 'Factura Final'), ('adicional', 'Factura por Trabajos Adicionales'), ('retencion', 'Factura por Retención'), ('otros', 'Otros')], default='progreso', max_length=20)),
                ('estado', models.CharField(choices=[('borrador', 'Borrador'), ('emitida', 'Emitida'), ('enviada', 'Enviada al Cliente'), ('pagada', 'Pagada'), ('vencida', 'Vencida'), ('cancelada', 'Cancelada')], default='borrador', max_length=20)),
                ('fecha_emision', models.DateField(default=django.utils.timezone.now, help_text='Fecha de emisión de la factura')),
                ('fecha_vencimiento', models.DateField(default=django.utils.timezone.now, help_text='Fecha de vencimiento para el pago')),
                ('fecha_pago', models.DateField(blank=True, help_text='Fecha en que se pagó completamente', null=True)),
                ('monto_subtotal', models.DecimalField(decimal_places=2, default=0, help_text='Subtotal antes de impuestos', max_digits=12)),
                ('monto_iva', models.DecimalField(decimal_places=2, default=0, help_text='Monto del IVA', max_digits=12)),
                ('monto_total', models.DecimalField(decimal_places=2, default=0, help_text='Monto total de la factura', max_digits=12)),
                ('monto_pagado', models.DecimalField(decimal_places=2, default=0, help_text='Monto ya pagado', max_digits=12)),
                ('monto_anticipos', models.DecimalField(decimal_places=2, default=0, help_text='Monto de anticipos aplicados', max_digits=12)),
                ('monto_pendiente', models.DecimalField(decimal_places=2, default=0, help_text='Monto pendiente de pago', max_digits=12)),
                ('descripcion_servicios', models.TextField(default='Servicios de construcción', help_text='Descripción detallada de los servicios facturados')),
                ('porcentaje_avance', models.DecimalField(blank=True, decimal_places=2, help_text='Porcentaje de avance del proyecto', max_digits=5, null=True)),
                ('metodo_pago', models.CharField(blank=True, choices=[('efectivo', 'Efectivo'), ('transferencia', 'Transferencia Bancaria'), ('cheque', 'Cheque'), ('tarjeta', 'Tarjeta de Crédito/Débito'), ('anticipo', 'Anticipo'), ('otros', 'Otros')], max_length=50)),
                ('referencia_pago', models.CharField(blank=True, help_text='Número de referencia del pago', max_length=100)),
                ('banco_origen', models.CharField(blank=True, help_text='Banco de origen del pago', max_length=100)),
                ('observaciones', models.TextField(blank=True, help_text='Observaciones adicionales')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('archivos_adjuntos', models.ManyToManyField(blank=True, related_name='facturas', to='core.archivoadjunto')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facturas', to='core.cliente')),
                ('creado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='facturas_creadas', to=settings.AUTH_USER_MODEL)),
                ('modificado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='facturas_modificadas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Factura',
                'verbose_name_plural': 'Facturas',
                'ordering': ['-fecha_emision', '-numero_factura'],
            },
        ),
        migrations.CreateModel(
            name='AplicacionAnticipo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monto_aplicado', models.DecimalField(decimal_places=2, help_text='Monto del anticipo aplicado a esta factura', max_digits=12)),
                ('fecha_aplicacion', models.DateField(auto_now_add=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('anticipo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aplicaciones', to='core.anticipo')),
                ('aplicado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aplicaciones_anticipo', to=settings.AUTH_USER_MODEL)),
                ('factura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aplicaciones_anticipo', to='core.factura')),
            ],
            options={
                'verbose_name': 'Aplicación de Anticipo',
                'verbose_name_plural': 'Aplicaciones de Anticipos',
                'ordering': ['-fecha_aplicacion'],
                'unique_together': {('anticipo', 'factura')},
            },
        ),
        migrations.AddField(
            model_name='anticipo',
            name='facturas_aplicadas',
            field=models.ManyToManyField(blank=True, through='core.AplicacionAnticipo', to='core.factura'),
        ),
        migrations.CreateModel(
            name='Gasto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.TextField()),
                ('monto', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fecha_gasto', models.DateField()),
                ('aprobado', models.BooleanField(default=False)),
                ('comprobante', models.FileField(blank=True, upload_to='comprobantes_gastos/')),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('aprobado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.categoriagasto')),
            ],
            options={
                'verbose_name': 'Gasto',
                'verbose_name_plural': 'Gastos',
            },
        ),
        migrations.CreateModel(
            name='HistorialNotificaciones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(max_length=50)),
                ('titulo', models.CharField(max_length=200)),
                ('mensaje', models.TextField()),
                ('fecha_envio', models.DateTimeField(auto_now_add=True)),
                ('metodo_envio', models.CharField(choices=[('sistema', 'Sistema'), ('email', 'Email'), ('push', 'Push')], max_length=20)),
                ('estado', models.CharField(choices=[('enviada', 'Enviada'), ('entregada', 'Entregada'), ('leida', 'Leída'), ('fallida', 'Fallida')], default='enviada', max_length=20)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Historial de Notificación',
                'verbose_name_plural': 'Historial de Notificaciones',
                'ordering': ['-fecha_envio'],
            },
        ),
        migrations.CreateModel(
            name='ItemInventario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('codigo', models.CharField(max_length=50, unique=True)),
                ('descripcion', models.TextField(blank=True)),
                ('stock_actual', models.DecimalField(decimal_places=2, help_text='Stock actual en unidades', max_digits=10)),
                ('stock_disponible', models.DecimalField(decimal_places=2, default=0, help_text='Stock disponible para asignación', max_digits=10)),
                ('stock_minimo', models.DecimalField(decimal_places=2, help_text='Stock mínimo recomendado', max_digits=10)),
                ('precio_unitario', models.DecimalField(decimal_places=2, help_text='Precio por unidad', max_digits=10)),
                ('unidad_medida', models.CharField(help_text='Unidad de medida (m², m³, kg, etc.)', max_length=50)),
                ('proveedor', models.CharField(blank=True, max_length=200)),
                ('fecha_ultima_compra', models.DateField(blank=True, null=True)),
                ('activo', models.BooleanField(default=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.categoriainventario')),
            ],
            options={
                'verbose_name': 'Item de Inventario',
                'verbose_name_plural': 'Items de Inventario',
            },
        ),
        migrations.CreateModel(
            name='LogActividad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accion', models.CharField(max_length=100)),
                ('modulo', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('fecha_actividad', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Log de Actividad',
                'verbose_name_plural': 'Logs de Actividad',
                'ordering': ['-fecha_actividad'],
            },
        ),
        migrations.CreateModel(
            name='Pago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monto', models.DecimalField(decimal_places=2, max_digits=12)),
                ('fecha_pago', models.DateField()),
                ('metodo_pago', models.CharField(choices=[('efectivo', 'Efectivo'), ('transferencia', 'Transferencia'), ('cheque', 'Cheque'), ('tarjeta', 'Tarjeta')], default='transferencia', max_length=20)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('confirmado', 'Confirmado'), ('rechazado', 'Rechazado')], default='pendiente', max_length=20)),
                ('comprobante_pago', models.FileField(blank=True, upload_to='comprobantes/')),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('factura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.factura')),
                ('registrado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pago',
                'verbose_name_plural': 'Pagos',
            },
        ),
        migrations.CreateModel(
            name='Presupuesto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre descriptivo del presupuesto', max_length=200)),
                ('version', models.CharField(default='1.0', help_text='Versión del presupuesto', max_length=20)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_aprobacion', models.DateTimeField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('borrador', 'Borrador'), ('en_revision', 'En Revisión'), ('aprobado', 'Aprobado'), ('rechazado', 'Rechazado'), ('obsoleto', 'Obsoleto')], default='borrador', max_length=20)),
                ('monto_total', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('monto_aprobado', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('observaciones', models.TextField(blank=True)),
                ('activo', models.BooleanField(default=True)),
                ('aprobado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='presupuestos_aprobados', to=settings.AUTH_USER_MODEL)),
                ('creado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='presupuestos_creados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='PartidaPresupuesto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Código de la partida', max_length=20)),
                ('descripcion', models.CharField(max_length=500)),
                ('unidad', models.CharField(help_text='Unidad de medida (m², m³, kg, etc.)', max_length=50)),
                ('cantidad', models.DecimalField(decimal_places=2, max_digits=10)),
                ('precio_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('monto_estimado', models.DecimalField(decimal_places=2, max_digits=15)),
                ('subcategoria', models.CharField(blank=True, max_length=100)),
                ('notas', models.TextField(blank=True)),
                ('orden', models.PositiveIntegerField(default=0)),
                ('categoria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.categoriagasto')),
                ('presupuesto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partidas', to='core.presupuesto')),
            ],
            options={
                'ordering': ['orden', 'codigo'],
            },
        ),
        migrations.CreateModel(
            name='Proyecto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('descripcion', models.TextField(blank=True)),
                ('presupuesto', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('fecha_inicio', models.DateField(blank=True, null=True)),
                ('fecha_fin', models.DateField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('en_progreso', 'En Progreso'), ('completado', 'Completado'), ('cancelado', 'Cancelado')], default='pendiente', max_length=20)),
                ('activo', models.BooleanField(default=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.cliente')),
            ],
            options={
                'verbose_name': 'Proyecto',
                'verbose_name_plural': 'Proyectos',
            },
        ),
        migrations.AddField(
            model_name='presupuesto',
            name='proyecto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='presupuestos', to='core.proyecto'),
        ),
        migrations.CreateModel(
            name='NotificacionSistema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('factura_vencida', 'Factura Vencida'), ('pago_pendiente', 'Pago Pendiente'), ('gasto_aprobacion', 'Gasto Requiere Aprobación'), ('proyecto_estado', 'Cambio de Estado del Proyecto'), ('anticipo_disponible', 'Anticipo Disponible'), ('presupuesto_revision', 'Presupuesto Requiere Revisión'), ('archivo_subido', 'Nuevo Archivo Subido'), ('sistema', 'Notificación del Sistema')], max_length=50)),
                ('titulo', models.CharField(max_length=200)),
                ('mensaje', models.TextField()),
                ('prioridad', models.CharField(choices=[('baja', 'Baja'), ('media', 'Media'), ('alta', 'Alta'), ('urgente', 'Urgente')], default='media', max_length=20)),
                ('leida', models.BooleanField(default=False)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_lectura', models.DateTimeField(blank=True, null=True)),
                ('factura', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.factura')),
                ('gasto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.gasto')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificaciones', to=settings.AUTH_USER_MODEL)),
                ('proyecto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.proyecto')),
            ],
            options={
                'verbose_name': 'Notificación',
                'verbose_name_plural': 'Notificaciones',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.AddField(
            model_name='gasto',
            name='proyecto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.proyecto'),
        ),
        migrations.AddField(
            model_name='factura',
            name='proyecto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facturas', to='core.proyecto'),
        ),
        migrations.CreateModel(
            name='AsignacionInventario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad_asignada', models.PositiveIntegerField(default=1)),
                ('fecha_asignacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_devolucion', models.DateField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('asignado', 'Asignado'), ('en_uso', 'En Uso'), ('devuelto', 'Devuelto'), ('perdido', 'Perdido'), ('dañado', 'Dañado')], default='asignado', max_length=20)),
                ('notas', models.TextField(blank=True)),
                ('asignado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asignaciones', to='core.iteminventario')),
                ('proyecto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asignaciones_inventario', to='core.proyecto')),
            ],
            options={
                'verbose_name': 'Asignación de Inventario',
                'verbose_name_plural': 'Asignaciones de Inventario',
                'ordering': ['-fecha_asignacion'],
            },
        ),
        migrations.CreateModel(
            name='ArchivoProyecto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre descriptivo del archivo', max_length=255)),
                ('archivo', models.FileField(help_text='Archivo a subir', upload_to='proyectos/archivos/')),
                ('thumbnail', models.ImageField(blank=True, help_text='Miniatura generada automáticamente', null=True, upload_to='proyectos/thumbnails/')),
                ('tipo', models.CharField(choices=[('plano', 'Plano'), ('documento', 'Documento'), ('imagen', 'Imagen'), ('contrato', 'Contrato'), ('permiso', 'Permiso'), ('otro', 'Otro')], default='documento', max_length=20)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción del archivo')),
                ('fecha_subida', models.DateTimeField(auto_now_add=True)),
                ('activo', models.BooleanField(default=True)),
                ('subido_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='archivos_subidos', to=settings.AUTH_USER_MODEL)),
                ('proyecto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='archivos', to='core.proyecto')),
            ],
            options={
                'verbose_name': 'Archivo de Proyecto',
                'verbose_name_plural': 'Archivos de Proyecto',
                'ordering': ['-fecha_subida'],
            },
        ),
        migrations.AddField(
            model_name='anticipo',
            name='proyecto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anticipos', to='core.proyecto'),
        ),
        migrations.CreateModel(
            name='PerfilUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telefono', models.CharField(blank=True, max_length=20)),
                ('direccion', models.TextField(blank=True)),
                ('activo', models.BooleanField(default=True)),
                ('ultimo_acceso', models.DateTimeField(blank=True, null=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('rol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.rol')),
            ],
            options={
                'verbose_name': 'Perfil de Usuario',
                'verbose_name_plural': 'Perfiles de Usuario',
            },
        ),
        migrations.CreateModel(
            name='VariacionPresupuesto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('aumento', 'Aumento'), ('disminucion', 'Disminución'), ('nueva_partida', 'Nueva Partida'), ('eliminacion', 'Eliminación')], max_length=20)),
                ('monto_anterior', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('monto_nuevo', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('diferencia', models.DecimalField(decimal_places=2, max_digits=15)),
                ('motivo', models.TextField()),
                ('fecha_variacion', models.DateTimeField(auto_now_add=True)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('aprobada', 'Aprobada'), ('rechazada', 'Rechazada')], default='pendiente', max_length=20)),
                ('aprobado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('partida', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.partidapresupuesto')),
                ('presupuesto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variaciones', to='core.presupuesto')),
            ],
            options={
                'ordering': ['-fecha_variacion'],
            },
        ),
        migrations.CreateModel(
            name='NotificacionProgramada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('factura', 'Factura'), ('proyecto', 'Proyecto'), ('gasto', 'Gasto'), ('archivo', 'Archivo'), ('sistema', 'Sistema'), ('recordatorio', 'Recordatorio'), ('cumpleanos', 'Cumpleaños'), ('evento', 'Evento')], max_length=50)),
                ('titulo', models.CharField(max_length=200)),
                ('mensaje', models.TextField()),
                ('prioridad', models.CharField(choices=[('baja', 'Baja'), ('normal', 'Normal'), ('alta', 'Alta'), ('urgente', 'Urgente')], default='normal', max_length=20)),
                ('fecha_envio', models.DateTimeField(help_text='Fecha y hora programada para el envío')),
                ('fecha_envio_real', models.DateTimeField(blank=True, help_text='Fecha y hora real del envío', null=True)),
                ('estado', models.CharField(choices=[('programada', 'Programada'), ('enviada', 'Enviada'), ('cancelada', 'Cancelada'), ('error', 'Error')], default='programada', max_length=20)),
                ('datos_adicionales', models.JSONField(blank=True, help_text='Datos adicionales para la notificación', null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificaciones_programadas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notificación Programada',
                'verbose_name_plural': 'Notificaciones Programadas',
                'ordering': ['fecha_envio'],
                'indexes': [models.Index(fields=['estado', 'fecha_envio'], name='core_notifi_estado_4585ba_idx'), models.Index(fields=['usuario', 'estado'], name='core_notifi_usuario_346bd0_idx')],
            },
        ),
        migrations.AlterUniqueTogether(
            name='presupuesto',
            unique_together={('proyecto', 'version')},
        ),
        migrations.AddIndex(
            model_name='factura',
            index=models.Index(fields=['proyecto', 'cliente'], name='core_factur_proyect_f37ac2_idx'),
        ),
        migrations.AddIndex(
            model_name='factura',
            index=models.Index(fields=['estado', 'fecha_vencimiento'], name='core_factur_estado_a17d88_idx'),
        ),
        migrations.AddIndex(
            model_name='factura',
            index=models.Index(fields=['numero_factura'], name='core_factur_numero__4980ce_idx'),
        ),
        migrations.AddIndex(
            model_name='anticipo',
            index=models.Index(fields=['cliente', 'proyecto'], name='core_antici_cliente_95bcd2_idx'),
        ),
        migrations.AddIndex(
            model_name='anticipo',
            index=models.Index(fields=['estado', 'fecha_recepcion'], name='core_antici_estado_0e200f_idx'),
        ),
        migrations.AddIndex(
            model_name='anticipo',
            index=models.Index(fields=['numero_anticipo'], name='core_antici_numero__6df21d_idx'),
        ),
    ]
