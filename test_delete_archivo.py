#!/usr/bin/env python3
"""
Script para probar la eliminaci√≥n de archivos
"""

import os
import sys
import django
from io import BytesIO
from django.core.files.uploadedfile import SimpleUploadedFile

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'sistema_construccion.settings')
django.setup()

from core.models import Proyecto, ArchivoProyecto
from core.forms_simple import ArchivoProyectoForm
from django.contrib.auth.models import User

def test_file_deletion():
    """Probar la eliminaci√≥n de archivos"""
    print("üß™ PROBANDO ELIMINACI√ìN DE ARCHIVOS")
    print("=" * 50)
    
    # Obtener un proyecto y usuario para la prueba
    proyecto = Proyecto.objects.first()
    user = User.objects.first()
    
    if not proyecto or not user:
        print("‚ùå No hay proyectos o usuarios disponibles para la prueba")
        return
    
    print(f"üìÅ Proyecto: {proyecto.nombre}")
    print(f"üë§ Usuario: {user.username}")
    
    # Crear un archivo de prueba
    excel_content = b"PK\x03\x04\x14\x00\x00\x00\x08\x00"  # Cabecera de archivo Excel
    excel_file = SimpleUploadedFile(
        "test_delete.xlsx",
        excel_content,
        content_type="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    )
    
    # Datos del formulario
    form_data = {
        'nombre': 'Archivo para Eliminar',
        'descripcion': 'Archivo de prueba para verificar eliminaci√≥n',
        'tipo': 'excel',
        'activo': True
    }
    
    # Crear el formulario y guardar archivo
    form = ArchivoProyectoForm(data=form_data, files={'archivo': excel_file}, proyecto=proyecto)
    
    if form.is_valid():
        archivo = form.save(commit=False)
        archivo.proyecto = proyecto
        archivo.subido_por = user
        archivo.save()
        
        print(f"‚úÖ Archivo creado: {archivo.nombre} (ID: {archivo.id})")
        
        # Verificar que el archivo existe
        archivos_antes = ArchivoProyecto.objects.filter(proyecto=proyecto).count()
        print(f"üìä Archivos antes de eliminar: {archivos_antes}")
        
        # Simular la eliminaci√≥n
        print("üóëÔ∏è  Eliminando archivo...")
        try:
            # Obtener el ID del proyecto antes de eliminar
            proyecto_id = archivo.proyecto.id
            
            # Eliminar el archivo
            archivo.delete()
            
            # Verificar que se elimin√≥
            archivos_despues = ArchivoProyecto.objects.filter(proyecto_id=proyecto_id).count()
            print(f"üìä Archivos despu√©s de eliminar: {archivos_despues}")
            
            if archivos_despues < archivos_antes:
                print("‚úÖ Archivo eliminado exitosamente")
            else:
                print("‚ùå El archivo no se elimin√≥ correctamente")
                
        except Exception as e:
            print(f"‚ùå Error al eliminar: {str(e)}")
    else:
        print("‚ùå Error creando archivo de prueba:")
        for field, errors in form.errors.items():
            print(f"   {field}: {errors}")

def test_confirmation_validation():
    """Probar la validaci√≥n de confirmaci√≥n"""
    print("\nüîç PROBANDO VALIDACI√ìN DE CONFIRMACI√ìN")
    print("=" * 50)
    
    # Simular diferentes valores de confirmaci√≥n
    test_cases = [
        ("ELIMINAR", True, "Confirmaci√≥n correcta"),
        ("eliminar", True, "Confirmaci√≥n en min√∫sculas"),
        ("Eliminar", True, "Confirmaci√≥n con may√∫scula inicial"),
        ("ELIMINAR ", True, "Confirmaci√≥n con espacio al final"),
        (" ELIMINAR", True, "Confirmaci√≥n con espacio al inicio"),
        ("BORRAR", False, "Palabra incorrecta"),
        ("", False, "Campo vac√≠o"),
        ("ELIMINAR123", False, "Confirmaci√≥n con n√∫meros"),
    ]
    
    for confirmacion, esperado, descripcion in test_cases:
        # Simular la validaci√≥n
        confirmacion_clean = confirmacion.strip().upper()
        es_valido = confirmacion_clean == 'ELIMINAR'
        
        status = "‚úÖ" if es_valido == esperado else "‚ùå"
        resultado = "V√ÅLIDO" if es_valido else "INV√ÅLIDO"
        
        print(f"{status} {descripcion}: '{confirmacion}' -> {resultado}")

if __name__ == "__main__":
    test_file_deletion()
    test_confirmation_validation()
    
    print("\n" + "=" * 50)
    print("‚úÖ PRUEBA COMPLETADA")
    print("=" * 50)
    print("üåê Para probar en el navegador:")
    print("  1. Ve a: http://localhost:8000/")
    print("  2. Inicia sesi√≥n con: admin / admin123")
    print("  3. Ve a Archivos ‚Üí Selecciona un proyecto")
    print("  4. Intenta eliminar un archivo")
    print("  5. Escribe 'ELIMINAR' para confirmar")
